{"remainingRequest":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/src/App.vue","mtime":1574884867922},{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/CodeClan_Work/week_7/day3/hw_week7_day3/lab_w07_d3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7ZXZlbnRCdXN9IGZyb20gJy4vbWFpbi5qcycKaW1wb3J0IENvdW50cmllc0xpc3QgZnJvbSAnLi9jb21wb25lbnRzL0NvdW50cmllc0xpc3QudnVlJwppbXBvcnQgQ291bnRyeURldGFpbCBmcm9tICcuL2NvbXBvbmVudHMvQ291bnRyeURldGFpbC52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2FwcCcsCiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgY291bnRyaWVzOiBbXSwKICAgICAgc2VsZWN0ZWRDb3VudHJ5OiBudWxsCiAgICB9CiAgfSwKICBtb3VudGVkKCl7CiAgICBmZXRjaCgiaHR0cHM6Ly9yZXN0Y291bnRyaWVzLmV1L3Jlc3QvdjIvYWxsIikKICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKQogICAgLnRoZW4oY291bnRyaWVzID0+IHRoaXMuY291bnRyaWVzID0gY291bnRyaWVzKTsKCiAgICBldmVudEJ1cy4kb24oJ2NvdW50cnktc2VsZWN0ZWQnLCAoY291bnRyeSkgPT4gewogICAgICB0aGlzLnNlbGVjdGVkQ291bnRyeSA9IGNvdW50cnk7CiAgICB9KQogIH0sCiAgY29tcG9uZW50czogewogICAgImNvdW50cmllcy1saXN0IjogQ291bnRyaWVzTGlzdCwKICAgICJjb3VudHJ5LWRldGFpbCI6IENvdW50cnlEZXRhaWwKICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template lang=\"html\">\n  <div class=\"\">\n<h1>Countries List</h1>\n<countries-list :countries='countries'></countries-list>\n<country-detail :country = 'selectedCountry'></country-detail>\n</div>\n</template>\n\n<script>\nimport {eventBus} from './main.js'\nimport CountriesList from './components/CountriesList.vue'\nimport CountryDetail from './components/CountryDetail.vue'\n\nexport default {\n  name: 'app',\n  data(){\n    return {\n      countries: [],\n      selectedCountry: null\n    }\n  },\n  mounted(){\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n    .then(res => res.json())\n    .then(countries => this.countries = countries);\n\n    eventBus.$on('country-selected', (country) => {\n      this.selectedCountry = country;\n    })\n  },\n  components: {\n    \"countries-list\": CountriesList,\n    \"country-detail\": CountryDetail\n  }\n}\n</script>\n\n<style lang=\"css\" scoped>\n</style>\n"]}]}